<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/23/2024 2:29:48 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-9RU8N8A"
  DTS:CreatorName="DESKTOP-9RU8N8A\Abubakar 2021-CS-171"
  DTS:DTSID="{408A6AAD-ACA0-4DAA-874D-3A039071E05A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="8192"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="27"
  DTS:VersionGUID="{8BCF161D-A58D-4D56-85DB-AB0B502986B7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Cache Connection Manager]"
      DTS:CreationName="CACHE"
      DTS:DTSID="{5EB6FEEA-C929-40C6-853C-4B1906B0A4A1}"
      DTS:ObjectName="Cache Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager>
          <DTS:CacheColumns>
            <DTS:CacheColumn
              DTS:DataType="3"
              DTS:IndexPosition="1"
              DTS:ObjectName="CustomerID"
              DTS:DTSID="{C972E5A7-6333-47B8-88F1-EEFEDBB1CC87}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50"
              DTS:ObjectName="CustomerName"
              DTS:DTSID="{AB535651-2232-41D5-B8BF-501FB9D18F9C}"
              DTS:CreationName="" />
            <DTS:CacheColumn
              DTS:DataType="130"
              DTS:Length="50"
              DTS:ObjectName="Country"
              DTS:DTSID="{859A3CFB-7FF8-4D61-B174-379F2138AAE1}"
              DTS:CreationName="" />
          </DTS:CacheColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Customers CM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{E63C5550-D6AA-44E4-8555-E5307E036217}"
      DTS:ObjectName="Customers CM">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="8192"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\bscs\Techlogix Internship\Data Engineer\Lookup Transform\customers.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="CustomerID"
              DTS:DTSID="{63788A47-1039-4E8B-AB42-A5B415E5CB27}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CustomerName"
              DTS:DTSID="{3C2D0411-4780-4F04-9617-85EC4E47AE4F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Country"
              DTS:DTSID="{4C417A12-C341-4C8F-93E1-1BC229CF9193}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{09437C7D-9F2B-413F-950F-1558D98A64D0}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=D:\bscs\Techlogix Internship\Data Engineer\Lookup Transform\CustomerOrders.xls;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{03C416F3-16A2-4720-9027-E0B59054DDC3}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=D:\bscs\Techlogix Internship\Data Engineer\Lookup Transform\UsBasedCustomerOrders.xls;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[orders CM]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{010F6BB8-08E3-4ED7-B573-3FBD92F10EED}"
      DTS:ObjectName="orders CM">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="8192"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\bscs\Techlogix Internship\Data Engineer\Lookup Transform\orders.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderID"
              DTS:DTSID="{4BFDA999-C538-4152-80BF-6399A4232DCB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="CustomerID"
              DTS:DTSID="{F619558B-7707-4FDB-ACF0-10F37290369C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderAmount"
              DTS:DTSID="{C09EF011-5A65-4FC0-BDF3-BA27F9C120A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderDate"
              DTS:DTSID="{2695DDBB-9F3C-4CDD-B6DC-53B9C5A45EBD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD2B2BA2-4419-4350-8D4F-70CF7D90A0B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="customerOrderCsvPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\\bscs\\Techlogix Internship\\Data Engineer\\Lookup Transform\\customerOrders.xls</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B38371F-C094-4AB1-92A8-38E34AC773D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="usBasedCustomerOrderCsvPath">
      <DTS:VariableValue
        DTS:DataType="8">D:\\bscs\\Techlogix Internship\\Data Engineer\\Lookup Transform\\UsBasedcustomerOrders.xls</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{B32FE10E-4FBB-4A2A-8C21-EF3D244BD9AE}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Cache Transform"
              componentClassID="Microsoft.Cache"
              contactInfo="Cache Transform;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Writes data to a cache (a .caw file) with the Cache Connection Manager. Reuse the cache between multiple Lookup transforms to reduce database load. Share the cache to reduce memory usage. Note: cache data is stored in clear text and not recommended for sensitive data."
              name="Cache Transform"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Cache Transform.Connections[CacheConnection]"
                  connectionManagerID="Package.ConnectionManagers[Cache Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Cache Connection Manager]"
                  description="The connection used to access the cache."
                  name="CacheConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input]"
                  hasSideEffects="true"
                  name="Cache Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">CustomerID</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerName"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">CustomerName</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Country"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[Country]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="The cache column associated with the input column."
                          name="CacheColumnName">Country</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Cache Transform.Outputs[Cache Output]"
                  name="Cache Output"
                  synchronousInputId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Customer src"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="8192"
              name="Customer src"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Customer src.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Customers CM]"
                  connectionManagerRefId="Package.ConnectionManagers[Customers CM]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[CustomerID]"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[CustomerName]"
                      length="50"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[CustomerName]"
                      name="CustomerName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[Country]"
                      length="50"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[CustomerName]"
                      dataType="wstr"
                      length="50"
                      name="CustomerName" />
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="50"
                      name="Country" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Flat File Source Output]"
              endId="Package\Data Flow Task\Cache Transform.Inputs[Cache Input]"
              name="Flat File Source Output"
              startId="Package\Data Flow Task\Customer src.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process customer order data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9C287F3A-93E2-482F-AFBB-400215A7C48F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process customer order data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Process customer order data\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Conditional Split.Outputs[Case 1]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Case 1"
                  synchronousInputId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]}) &amp;&amp; #{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]} == "US"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(Country) &amp;&amp; Country == "US"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Excel Destination"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="Excel Destination"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Excel_Destination_1</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Process customer order data\Excel Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[OrderID]"
                      cachedDataType="i4"
                      cachedName="OrderID"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderID]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderAmount]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderDate]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerName"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerName]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[OrderType]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="OrderType"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderType]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Country]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderID]"
                      dataType="wstr"
                      length="255"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                      dataType="wstr"
                      length="255"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderAmount]"
                      dataType="wstr"
                      length="255"
                      name="OrderAmount" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderDate]"
                      dataType="wstr"
                      length="255"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerName]"
                      dataType="wstr"
                      length="255"
                      name="CustomerName" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[OrderType]"
                      dataType="wstr"
                      length="255"
                      name="OrderType" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Excel Destination.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Excel Destination 1"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="Excel Destination 1"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Excel_Destination_2</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Process customer order data\Excel Destination 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[OrderID]"
                      cachedDataType="i4"
                      cachedName="OrderID"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderID]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderAmount]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderDate]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerName"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[CustomerName]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[OrderType]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="OrderType"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderType]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]" />
                    <inputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      externalMetadataColumnId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[Country]"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderID]"
                      dataType="wstr"
                      length="255"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                      dataType="wstr"
                      length="255"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderAmount]"
                      dataType="wstr"
                      length="255"
                      name="OrderAmount" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderDate]"
                      dataType="wstr"
                      length="255"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[CustomerName]"
                      dataType="wstr"
                      length="255"
                      name="CustomerName" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[OrderType]"
                      dataType="wstr"
                      length="255"
                      name="OrderType" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Excel Destination 1.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Excel Destination 1.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\Excel Destination 1.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Excel Destination 1.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\lkp customer Id"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="lkp customer Id"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from () [refTable]
where [refTable].[CustomerID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CustomerID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CustomerName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Process customer order data\lkp customer Id.Connections[CacheConnection]"
                  connectionManagerID="Package.ConnectionManagers[Cache Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Cache Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="CacheConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CustomerID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[CustomerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[CustomerName]"
                      name="CustomerName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">CustomerName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Country</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Matched ROws"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Matched ROws"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]" />
                    <inputColumn
                      refId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerName"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[CustomerName]" />
                    <inputColumn
                      refId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Country"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[Country]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[OrderType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[OrderType]"
                      name="OrderType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(#{Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]} &gt; 1000) ? "High Value" : "Regular"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(OrderAmount &gt; 1000) ? "High Value" : "Regular"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[CustomerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[CustomerName]"
                      name="CustomerName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[CustomerName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">CustomerName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[Country]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">Country</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Process customer order data\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Process customer order data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Process customer order data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Process customer order data\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Orders src"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="8192"
              name="Orders src"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Process customer order data\Orders src.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[orders CM]"
                  connectionManagerRefId="Package.ConnectionManagers[orders CM]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderID]"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderID]"
                      name="OrderID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[CustomerID]"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]"
                      name="CustomerID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderAmount]"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]"
                      name="OrderAmount"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderDate]"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderDate]"
                      name="OrderDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderID]"
                      dataType="i4"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderAmount]"
                      dataType="i4"
                      name="OrderAmount" />
                    <externalMetadataColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].ExternalColumns[OrderDate]"
                      dataType="dbDate"
                      name="OrderDate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Process customer order data\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[OrderID]"
                      cachedDataType="i4"
                      cachedName="OrderID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerName"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[CustomerName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[OrderType]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="OrderType"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[OrderType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 1].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[Country]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Process customer order data\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[OrderID]"
                      cachedDataType="i4"
                      cachedName="OrderID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[CustomerName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerName"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[CustomerName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Country"
                      lineageId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output].Columns[Country]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Process customer order data\Union All.Inputs[Union All Input 2].Columns[OrderType]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="OrderType"
                      lineageId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output].Columns[OrderType]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Process customer order data\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderID]"
                      name="OrderID" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderAmount]"
                      name="OrderAmount" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]"
                      dataType="dbDate"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderDate]"
                      name="OrderDate" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[CustomerName]"
                      name="CustomerName" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[OrderType]"
                      name="OrderType" />
                    <outputColumn
                      refId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Process customer order data\Union All.Outputs[Union All Output 1].Columns[Country]"
                      name="Country" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Process customer order data\unmatched rows"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="unmatched rows"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input].Columns[OrderAmount]"
                      cachedDataType="i4"
                      cachedName="OrderAmount"
                      lineageId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[CustomerName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[CustomerName]"
                      name="CustomerName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,255)("Customer with " + (DT_WSTR,255)#{Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[CustomerID]} + " not exist")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,255)("Customer with " + (DT_WSTR,255)CustomerID + " not exist")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[OrderType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[OrderType]"
                      name="OrderType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(#{Package\Process customer order data\Orders src.Outputs[Flat File Source Output].Columns[OrderAmount]} &gt; 1000) ? "High Value" : "Regular"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(OrderAmount &gt; 1000) ? "High Value" : "Regular"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">NULL(DT_WSTR,255)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">NULL(DT_WSTR,255)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Process customer order data.Paths[Case 1]"
              endId="Package\Process customer order data\Excel Destination.Inputs[Excel Destination Input]"
              name="Case 1"
              startId="Package\Process customer order data\Conditional Split.Outputs[Case 1]" />
            <path
              refId="Package\Process customer order data.Paths[Derived Column Output]"
              endId="Package\Process customer order data\Union All.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Process customer order data\unmatched rows.Outputs[Derived Column Output]" />
            <path
              refId="Package\Process customer order data.Paths[Derived Column Output1]"
              endId="Package\Process customer order data\Union All.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Process customer order data\Matched ROws.Outputs[Derived Column Output]" />
            <path
              refId="Package\Process customer order data.Paths[Flat File Source Output]"
              endId="Package\Process customer order data\lkp customer Id.Inputs[Lookup Input]"
              name="Flat File Source Output"
              startId="Package\Process customer order data\Orders src.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Process customer order data.Paths[Lookup Match Output]"
              endId="Package\Process customer order data\Matched ROws.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Process customer order data\lkp customer Id.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Process customer order data.Paths[Lookup No Match Output]"
              endId="Package\Process customer order data\unmatched rows.Inputs[Derived Column Input]"
              name="Lookup No Match Output"
              startId="Package\Process customer order data\lkp customer Id.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Process customer order data.Paths[Multicast Output 1]"
              endId="Package\Process customer order data\Conditional Split.Inputs[Conditional Split Input]"
              name="Multicast Output 1"
              startId="Package\Process customer order data\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Process customer order data.Paths[Multicast Output 2]"
              endId="Package\Process customer order data\Excel Destination 1.Inputs[Excel Destination Input]"
              name="Multicast Output 2"
              startId="Package\Process customer order data\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Process customer order data.Paths[Union All Output 1]"
              endId="Package\Process customer order data\Multicast.Inputs[Multicast Input 1]"
              name="Union All Output 1"
              startId="Package\Process customer order data\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{41CED480-5229-4E88-B68F-ACBE86318F9E}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_861e53e8d11346af99503239d6341e49"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::customerOrderCsvPath,User::usBasedCustomerOrderCsvPath">
          <ProjectItem
            Name="ST_861e53e8d11346af99503239d6341e49.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{75F55686-4EC4-45B1-9FD6-6270D7A333EF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_861e53e8d11346af99503239d6341e49</RootNamespace>
    <AssemblyName>ST_861e53e8d11346af99503239d6341e49</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL">
      <HintPath>C:\Users\Abubakar 2021-CS-171\AppData\Local\Temp\Vsta\SSIS_ST160\Vstax9IytBjr__UKcF929P3EL3A\packages\Microsoft.Office.Interop.Excel.15.0.4795.1001\lib\net20\Microsoft.Office.Interop.Excel.dll</HintPath>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[

#region Namespaces
using Excel = Microsoft.Office.Interop.Excel;
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Microsoft.CSharp;
#endregion

namespace ST_861e53e8d11346af99503239d6341e49
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        private bool IsRowEmpty(Excel.Range row)
        {
            foreach (Excel.Range cell in row.Cells)
            {
                if (cell.Value2 != null)
                {
                    return false;
                }
            }
            return true;
        }
        public void Main()
		{
            // Get the Excel file path from the SSIS variable
            string customerOrderFilePath = Dts.Variables["User::customerOrderCsvPath"].Value.ToString();
            string usBasedCustomerOrderexcelFilePath = Dts.Variables["User::usBasedCustomerOrderCsvPath"].Value.ToString();

            string[] files = { customerOrderFilePath, usBasedCustomerOrderexcelFilePath };

            // Initialize Excel Application
            Excel.Application excelApp = null;
            Excel.Workbook workbook = null;

            foreach(var excelFilePath in files)
            {
                try
                {
                    excelApp = new Excel.Application();
                    workbook = excelApp.Workbooks.Open(excelFilePath);

                    // Loop through all sheets
                    foreach (Excel.Worksheet worksheet in workbook.Sheets)
                    {
                        Excel.Range usedRange = worksheet.UsedRange;

                        // Clear contents and delete empty rows
                        for (int i = usedRange.Rows.Count; i >= 2; i--) // Start from the second row to preserve headers
                        {
                            Excel.Range row = usedRange.Rows[i];
                            //if (!IsRowEmpty(row))
                           // {
                                row.Delete();
                           // }
                        }
                    }

                    workbook.Save();
                }
                catch (Exception ex)
                {
                    Dts.Events.FireError(0, "Script Task", ex.Message, "", 0);
                    Dts.TaskResult = (int)ScriptResults.Failure;
                    return;
                }
                finally
                {
                    if (workbook != null) workbook.Close();
                    if (excelApp != null) excelApp.Quit();
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_861e53e8d11346af99503239d6341e49</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_861e53e8d11346af99503239d6341e49</msb:DisplayName>
    <msb:ProjectId>{2100D8CC-0E3A-4771-B9BC-27FD203F49EB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_861e53e8d11346af99503239d6341e49.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Office.Interop.Excel" version="15.0.4795.1001" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_861e53e8d11346af99503239d6341e49.Properties.Settings.get_Default():ST_861e53e8d11346af99503239d6341e49.Properties.Sett" +
    "ings")]

namespace ST_861e53e8d11346af99503239d6341e49.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_861e53e8d11346af99503239d6341e49")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_861e53e8d11346af99503239d6341e49")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_861e53e8d11346af99503239d6341e49.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_861e53e8d11346af99503239d6341e49.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_861e53e8d11346af99503239d6341e49.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_861e53e8d11346af99503239d6341e49.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_861e53e8d11346af99503239d6341e49.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_861e53e8d11346af99503239d6341e49.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAWOamcAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAA+kYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKhGAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAACcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADc
RgAAAAAAAEgAAAACAAUAJCQAAMwhAAABAAAAAAAAAPBFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswCgDkAAAAAQAAEQNvDAAABm8UAAAGCjixAAAABm8ZAAAK
dAoAAAILfggAAAQtLBYfU9ACAAACKBoAAAoXjSoAAAElFhYUKBsAAAqiKBwAAAooHQAACoAIAAAE
fggAAAR7HgAACn4IAAAEfgcAAAQtNhYfI9ACAAACKBoAAAoYjSoAAAElFhYUKBsAAAqiJRcYFCgb
AAAKoigfAAAKKCAAAAqABwAABH4HAAAEeyEAAAp+BwAABAdvGAAABhRvIgAACm8jAAAKLAQWDN4g
Bm8kAAAKOkT////eEQZ1EAAAAQ0JLAYJbyUAAArcFyoIKgEQAAACAAwAw88AEQAAAAAbMBAAEgIA
AAIAABECKCYAAApvJwAACnIBAABwbygAAApvKQAACm8qAAAKCgIoJgAACm8nAAAKcjcAAHBvKAAA
Cm8pAAAKbyoAAAoLGI00AAABJRYGoiUXB6IUDBQNEwQWEwU4ngEAABEEEQWaEwZyewAAcHMrAAAK
KCwAAAooLQAACnQHAAACDAhvHwAABhEGfi4AAAp+LgAACn4uAAAKfi4AAAp+LgAACn4uAAAKfi4A
AAp+LgAACn4uAAAKfi4AAAp+LgAACn4uAAAKfi4AAAp+LgAACm8dAAAGDQlvKQAABm8bAAAGEwc4
kAAAABEHbxkAAAp0EAAAAm8rAAAGEwgRCG8WAAAGbw4AAAYTCStofgkAAAQtJBbQCgAAAigaAAAK
0AIAAAIoGgAACigvAAAKKDAAAAqACQAABH4JAAAEezEAAAp+CQAABBEIbxYAAAYRCYw4AAABfi4A
AApvEAAABm8yAAAKfi4AAApvEgAABiYRCRdZEwkRCRgvkxEHbyQAAAo6ZP///94VEQd1EAAAARMK
EQosBxEKbyUAAArcCW8nAAAG3lYTCwIoJgAACm8zAAAKFnLFAABwEQtvNAAACnLdAABwFm81AAAK
JgIoJgAAChdvNgAACt4/CSwVCX4uAAAKfi4AAAp+LgAACm8lAAAGCCwGCG8jAAAG3BEFF1gTBREF
EQSOaT9X/v//AigmAAAKFm82AAAKKgAAQUwAAAIAAADeAAAAowAAAIEBAAAVAAAAAAAAAAAAAABj
AAAAOwEAAJ4BAAA0AAAAEQAAAQIAAABjAAAAbwEAANIBAAAiAAAAAAAAAB4CKDcAAAoqHgIoOAAA
CiqufgEAAAQtHnLfAABw0AMAAAIoGgAACm85AAAKczoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoAC
AAAEKhp+AwAABCoeAig7AAAKKi5zCQAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAjAwAACN+AAD4DAAAHAsAACNTdHJpbmdzAAAAABQYAABUAQAAI1VTAGgZAAAQ
AAAAI0dVSUQAAAB4GQAAVAgAACNCbG9iAAAAAAAAAAIAAAFXP6IJCQMAAAD6ATMAFgAAAQAAADoA
AAAWAAAACQAAACsAAAAnAAAACQAAADsAAAACAAAAaQAAACUAAAACAAAABgAAAAwAAAAPAAAABgAA
AAEAAAAGAAAAAQAAAAMAAAAAAI4GAQAAAAAABgDbBGcIBgB7BWcIBgDJAzUIDwDbCAAABgD2A0QH
BgCPBEQHBgBwBEQHBgBiBUQHBgAMBUQHBgAlBUQHBgAkBEQHBgA/BK4FCgBABRAGCgDqAhAGBgAE
CKIJBgA9Ar8GBgBWB78GBgDGBr8GBgBoA2cIBgAcCr8GDgB6AGcIBgDcAL8GDgBPA2cIBgDIAL8G
BgCsAzUIBgDCB4cIBgBgBy8HEgAzA3gGEgDdA3gGEgAGAxoHBgANBEgIBgCDA0gIBgDDBEgIBgCp
Ar8GBgCRA0gIBgD7BEgIBgCsBEQHBgAxAqIJBgBYA0gIBgBYBEgIBgBSAr8GFgBsB5AHFgAzCZAH
FgC3B5AHDgCvB2cIFgBLCZAHDgCfAooJBgBsAJEBCgBmBhAGGgApCX8CGgAoAn8CBgDKBb8GBgDS
Ab8GBgA/BkgIBgAeCL8GBgCfAL8GCgDSBxAGBgD+CkQHAAAAAEcBAAAAAAEAAQABABAA3AYXATkA
AQABAAAAEACOCPYIUQABAAQAAAEQAF0J9gh5AAMACAChEAAAAgpHBgAABAALAKEQAACmCkcGAAAE
AAsAoRAAAO8GRwYAAAQACwChEAAA6QlHBgAABAALAKEQAACBCkcGAAAEAAsAoRAAABsCRwYAAAQA
CwChEAAAyQlHBgAABAAaAKEQAADoBUcGAAAEABwAoRAAAPMJRwYAAAQAHAChEAAAkQpHBgAABAAc
AKEQAAB2CUcGAAAEABwAoRAAACQKRwYAAAQAHgChEAAA7gZHBgAABAAeAKEQAADZBUcGAAAEACQA
oRAAACMKRwYAAAQAKgADAQAA0AkAAEkABAAsAIMBEAA2AAAAUQAHACwAgwEQAF4AAABRAAkALAAR
AMsGIQIRANoCJQIRAPcBKQIGBoABLQJWgLUJMAJWgLoCMAIWAD0ANAIWAGUAQwIWAD0AUQJQIAAA
AACBABALYAIBAFAhAAAAAIYA4gYGAAIAvCMAAAAAhhgoCAYAAgDEIwAAAACDGCgIBgACAMwjAAAA
AJMIvgdmAgIA+CMAAAAAkwjCAmsCAgD/IwAAAACTCM4CcAICAAckAAAAAJYIWgp2AgMADiQAAAAA
hhgoCAYAAwAWJAAAAACRGC4IewIDAAAAAAADAAYYRAAGAAMAAAAAAIMQxg2ACX8CAwAAAAAAAwAG
GP4ABgAEAAAAAACDEMYNtgqEAgQAAAAAAAMABhgLAQYABAAAAAAAgxDGDUAKiAIEAAAAAACDEMYN
TQqOAgcAAAAAAIMQxgVIA5UCCgAAAAAAAwAGGKUABgAMAAAAAACDEMYFEAiaAgwAAAAAAAMABhiS
AAYADQAAAAAAgxDGDQwKfwINAAAAAAADAAYYUQAGAA4AAAAAAIMQxg2yAEEADgAAAAAAgxDGDb0A
nwIPAAAAAAADAAYYDwAGABAAAAAAAAMQxgUQCJoCEAAAAAAAAwAGGIUABgARAAAAAAADEMYF1wak
AhEAAAAAAAMABhjjAAYAIQAAAAAAAxDGDXIJuAIhAAAAAAADAAYYKQAGACIAAAAAAAMQxg1ACu4A
IgAAAAAAAwAGGPAABgAjAAAAAAADEMYFOwoGACMAAAAAAAMABhgcAAYAIwAAAAAAAxDGBR4DjgIj
AAAAAAADAAYYzwAGACYAAAAAAAMQxgWpBQYAJgAAAAAAAwAGGDsBBgAmAAAAAAADEMYNxQm9AiYA
AAAAAAMABhgBAAYAJwAAAAAAAxDGDRMCfwInAAAAAQDaCgAAAQCjBQAgAAAAAAAgAAAAABEgAQDq
ChEgAgDeChEgAQDqChEgAgDeChEgAwAAAAAgAAAAABEgAQA1CgAgAAAAAAAgAAAAAAAgAAAAAAEg
AQAAAAAgAAAAAAAgAAAAAAEgAQB2AhEgAgBmCREgAwAHCxEgBAAVChEgBQDfAREgBgDXAREgBwC4
AREgCADnBhEgCQDmBxEgCgBJAhEgCwDzChEgDADwBxEgDQDRChEgDgA5BhEgDwCsAQAgAAAAAAAg
AAAAABEgAQDqCBEgAgB2AhEgAwDjBQAgAAAAAAAgAAAAAAcARAAHABgACgCZAAsAmQAMAEgADAA4
AA8AmQAQAEwAEAAkAAkAKAgBABEAKAgGABkAKAgKACkAKAgQADEAKAgQADkAKAgQAEEAKAgQAEkA
KAgQAFEAKAgQAFkAKAgQAGEAKAgQAGkAKAgGAJkAKAgGAMkAKAgGAOkAKAgVAPkAKAgbAAEBKAgQ
AAkBKAgGABkBKAggAAkBKAgqACEBKAgwACkBKAgQADkBKAgBAEEBKAgBAHkAdQpBABEBZAJFAFEB
LANOAGEB+wZYAAwALAN8AAwALgqIAGEBCgdYABQALAN8ABQALgqIABwAIQKkACQAIQK4AHkAyArB
AIEAJAMGAHEAvQnbAIkBJQnhAJEBtgbnAJkBmQVBAKEAyAXuAKkBKAgQALEBUAHyALkB6AH7ABEB
0QUCAWEBwAoFASwALAN8ACwALgqIADQAIQK4AIkB3gksAYkABwLuAMkB+gcyAYkBZgoBAHEAKAgG
AKEAKAgGABEB+go7AdEAKAhBAfEAKAgGAAgAFABkAQgAGABpASkAewAaAy4ACwDyAi4AEwD7Ai4A
GwAaAy4AIwAjAy4AKwBMAy4AMwBMAy4AOwBMAy4AQwAjAy4ASwBSAy4AUwBMAy4AWwBpA0MAYwBp
AUkAewAaA2EAawBpAWMAcwBpAYkAuwCzA6MAawBpAaMAgwBDBKMAiwBKBKMAkwBpAakAuwC8A8MA
awBpAcMAmwB0BMMAowDLBMkAuwDFA+MAawBpAeMAiwAkBeMAqwBOBeMAkwBpAekAuwDgAwMBawBp
AQMBgwBDBAMBiwCuBQMBkwBpAQkBuwDpAyMBawBpASMBmwDYBSMBowAvBikBuwAEBEMBawBpAUMB
gwBDBEMBswCIBkMBiwCWBkMBkwBpAUkBuwDFA2MBawBpAWMBswCIBmMBiwDABmMBkwBpAWkBuwAx
BIABuwCzA4MBawBpAYMBiwDqBoMBqwBOBYMBkwBpAYkBuwA6BKMBawBpAaMBiwAUB6MBgwBDBKMB
kwBpAcABuwC8A8MBawBpAcMBmwA+B8MBowCfB+MBawBpAeMBiwD9B+MBswCIBuMBkwBpAQACuwDF
AwMCawBpAQMCqwBOBQMCiwAnCAMCkwBpASACuwDFAyMCawBpASMCswCIBiMCiwAkBSMCkwBpAUAC
uwDOA0MCawBpAUMCiwDqBkMCkwBpAWMCawBpAWMCiwAnCGMCkwBpAYACuwDXA6MCawBpAcACuwDg
A8MCawBpAQADuwDpAyADuwDpA2ADuwDXA6ADuwDyA6ADwwD7A+ADuwAEBCAEuwDFA2AEuwANBKAE
wwAWBKAEuwAfBOAEuwAoBOAEwwDFAyAFuwAxBGAFuwA6BGAFwwDFAwcAbgEJAHABCwBwAQ0AcAEP
AHABEQBwARMAcAEVAHABFwBwARkAcgEbAG4BHQBwAR8AcAEhAHIBIwBuASUAHwInAHABKQBwASsA
cAEtAHABLwBwATEAcAEzAHABNQBwATcAcAE5AHABOwBwAT0AcAE/AHABQQBwAUMAbgFFAB8CRwBw
AUkAcAFLAHABTQBuAU8AbgE3AMUAAwABAAQAAwAKAAQAEQAJABIACwATAAwAAADCB8ICAADiAscC
AABeCswCAACECdECAAC6CtYCAABdCtoCAAAQCtECAADBAOACAAB2CeQCAABdCukCAADJCe0CAAAX
AtECAgAFAAMAAgAGAAUAAQAHAAUAAgAIAAcAAgAMAAkAAgAOAAsAAgAQAA0AAQARAA0AAgAWAA8A
AgAYABEAAQAZABEAAgAfABMAAgAhABUAAgApABcAAgArABkAbwCMAJoArwAUASIBBIAAAAEAAACk
I2ptAAAAAAAAFwEAAAQAAAAAAAAAAAAAAEkBiAEAAAAAEAAAAAAAAAAAAAAAUgHxBQAAAAAEAAAA
AAAAAAAAAABJAa4CAAAAAAQAAAAAAAAAAAAAAEkBvwYAAAAABAAAAAAAAAAAAAAAWwF/BwAAAAAQ
AAAAAAAAAAAAAABSAWEBAAAAAAAAAAABAAAAmAgAABQAAgAVAAIAFgACAAAAAAAAX1Z0YmxHYXAx
XzExMABfVnRibEdhcDFfMTAAX1Z0YmxHYXAxXzIwAF9WdGJsR2FwMl82MAA8Pm9fXzAAPD5wX18w
AF9WdGJsR2FwMV8yMQBfVnRibEdhcDZfMzEAPD5vX18xADw+cF9fMQBJRW51bWVyYWJsZWAxAENh
bGxTaXRlYDEAX1Z0YmxHYXAxXzEyAF9WdGJsR2FwNV8zMgBJbnQzMgBfVnRibEdhcDRfNjIAZ2V0
X1ZhbHVlMgBzZXRfVmFsdWUyAEZ1bmNgMwBfVnRibEdhcDJfNzQARnVuY2A0AF9WdGJsR2FwMV80
NQBfVnRibEdhcDNfMTE2AF9WdGJsR2FwMl8xNgBfVnRibEdhcDNfNgBTVF84NjFlNTNlOGQxMTM0
NmFmOTk1MDMyMzlkNjM0MWU0OQBfVnRibEdhcDNfOQA8TW9kdWxlPgBHZXRUeXBlRnJvbUNMU0lE
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAENvcnJ1cHRMb2FkAElnbm9yZVJlYWRPbmx5UmVjb21tZW5kZWQA
R3VpZABXcml0ZVJlc1Bhc3N3b3JkAENyZWF0ZUluc3RhbmNlAGRlZmF1bHRJbnN0YW5jZQBnZXRf
TWVzc2FnZQBnZXRfVXNlZFJhbmdlAEludm9rZQBWYXJpYWJsZQBJRW51bWVyYWJsZQBJRGlzcG9z
YWJsZQBFZGl0YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlbmFt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEV4cHJlc3Npb25UeXBlAFN5c3RlbS5D
b3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNw
b3NlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ2FsbFNpdGUARGlzcElkQXR0
cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQ29tRXZlbnRJ
bnRlcmZhY2VBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEludGVyZmFjZVR5cGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAExDSURDb252ZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAERlZmF1bHRNZW1i
ZXJBdHRyaWJ1dGUAVHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBDb0NsYXNzQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBTYXZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWlz
c2luZwBfV29ya2Jvb2sAUm91dGVXb3JrYm9vawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBMb2NhbABNYXJzaGFs
AE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU1RfODYxZTUzZThkMTEzNDZhZjk5NTAzMjM5ZDYzNDFlNDkuZGxsAGdl
dF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBPcmlnaW4AX0Fw
cGxpY2F0aW9uAFVuYXJ5T3BlcmF0aW9uAEJpbmFyeU9wZXJhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3Vs
dHVyZUluZm8AQ1NoYXJwQXJndW1lbnRJbmZvAE1pY3Jvc29mdC5DU2hhcnAATWljcm9zb2Z0LkNT
aGFycC5SdW50aW1lQmluZGVyAENhbGxTaXRlQmluZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIARXZl
bnRzT2JqZWN0V3JhcHBlcgBEZWxpbWl0ZXIAQ29udmVydGVyAEZpcmVFcnJvcgBJRW51bWVyYXRv
cgBHZXRFbnVtZXJhdG9yAEFjdGl2YXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfODYxZTUzZThkMTEzNDZhZjk5NTAzMjM5ZDYzNDFl
NDkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNhdmVDaGFu
Z2VzAFNUXzg2MWU1M2U4ZDExMzQ2YWY5OTUwMzIzOWQ2MzQxZTQ5LlByb3BlcnRpZXMAZ2V0X1Zh
cmlhYmxlcwBDU2hhcnBBcmd1bWVudEluZm9GbGFncwBDU2hhcnBCaW5kZXJGbGFncwBTZXR0aW5n
cwBVcGRhdGVMaW5rcwBnZXRfV29ya2Jvb2tzAGdldF9DZWxscwBTeXN0ZW0uTGlucS5FeHByZXNz
aW9ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAGdldF9TaGVldHMAU2NyaXB0
UmVzdWx0cwBnZXRfRXZlbnRzAERvY0V2ZW50cwBXb3JrYm9va0V2ZW50cwBBcHBFdmVudHMAZ2V0
X1Jvd3MARm9ybWF0AE9iamVjdABfV29ya3NoZWV0AFRhcmdldABTaGlmdABRdWl0AGdldF9fRGVm
YXVsdABzZXRfX0RlZmF1bHQAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQA
RG9jRXZlbnRzX0V2ZW50AFdvcmtib29rRXZlbnRzX0V2ZW50AEFwcEV2ZW50c19FdmVudABnZXRf
Q291bnQAQ29udmVydABNb3ZlTmV4dABBZGRUb01ydQByb3cAQ29sdW1uSW5kZXgAUm93SW5kZXgA
Tm90aWZ5AGdldF9Bc3NlbWJseQBSZWFkT25seQBJc1Jvd0VtcHR5AAAANVUAcwBlAHIAOgA6AGMA
dQBzAHQAbwBtAGUAcgBPAHIAZABlAHIAQwBzAHYAUABhAHQAaAAAQ1UAcwBlAHIAOgA6AHUAcwBC
AGEAcwBlAGQAQwB1AHMAdABvAG0AZQByAE8AcgBkAGUAcgBDAHMAdgBQAGEAdABoAABJMAAwADAA
MgA0ADUAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQBDADAAMAAwAC0AMAAwADAAMAAwADAAMAAw
ADAAMAA0ADYAARdTAGMAcgBpAHAAdAAgAFQAYQBzAGsAAAEAcVMAVABfADgANgAxAGUANQAzAGUA
OABkADEAMQAzADQANgBhAGYAOQA5ADUAMAAzADIAMwA5AGQANgAzADQAMQBlADQAOQAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAKuoTlvC+iU2nwkauxeSn8gAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcQQgAQEGCSACARKAiRKAiQUgAgEODgYgAQESgIkJBwQS
PRIoAhJBAyAAHAgAARKAiRGApQkAAhKAqRGArQ4WAAQSgLURgLkRgL0SgIkVEoDBARKAqQwVElUB
FRJhAxJdHAILAAEVElUBEwASgLUDBhMADRUSVQEVElkEEl0cHBwJFRJZBBJdHBwcCiADEwMTABMB
EwIIFRJhAxJdHAIIIAITAhMAEwEDIAACFQcMDg4SHBIwHQ4IDhI9EigIEkESRQUgABKAxQUgABKA
yQYgARKAzRwDIAAOCAABEoCJEYDVBgABHBKAiQIGHA4AAxKAtRGAuRKAiRKAiQ0VElUBFRJhAxJd
HBIoCRUSYQMSXRwSKAUgABKA5QggBQIIDg4OCAUgABKA6QcgAgEOEoDpCLd6XFYZNOCJCImEXc2A
gMyRCLA/X38R1Qo6BAAAAAAEAQAAAAEcARuAqywAAIClU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNl
cnZpY2VzLkN1c3RvbU1hcnNoYWxlcnMuRW51bWVyYXRvclRvRW51bVZhcmlhbnRNYXJzaGFsZXIs
IEN1c3RvbU1hcnNoYWxlcnMsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhAAETAwYSaQMGEm0DBhIQAgYIAwYRUA4GFRJVARUS
WQQSXRwcHA0GFRJVARUSYQMSXRwCDgYVElUBFRJhAxJdHBIoBSABAhIoBAAAEmkEAAASbQUAAQES
bQQAABIQAwAAAQQgABIoAyAACAUgAhwcHAYgAwEcHBwEIAEcHAQgABI9BCABARwTIA8SMA4cHBwc
HBwcHBwcHBwcHAQgABI8BCAAEiwECAASaQQIABJtBAgAEhAECAASKAMIAAgFCAIcHBwDCAAcBAgA
EjwDCAAOBAgAEiwIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzg2MWU1M2U4ZDExMzQ2YWY5OTUwMzIzOWQ2MzQxZTQ5AAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43CAEA7gAAAAAACAEAdgAAAAAACAEAAAAA
AAAACAEAdQAAAAAACAEA/P///wAACAEAAgEAAAAACAEAbAUAAAAACAEAgwcAAAAACAEADwAAAAAA
CAEAPAIAAAAACAEALgEAAAAACAEAAwAAAAAACAEAFQEAAAAACAEAGwEAAAAACAEA5QEAAAAACAEA
nAEAAAAABgEAAgAAACkBACQwMDAyNDQxMy0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAFYB
AChNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzKE1pY3Jvc29mdC5PZmZp
Y2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHMAAFgBACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0w
MDAwMDAwMDAwNDYuTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkFwcEV2ZW50c19FdmVu
dAAAKQEAJDAwMDIwOEQ1LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAXwEAWlN5c3RlbS5P
YmplY3QsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQAAKQEAJDAwMDI0NDExLTAwMDAtMDAwMC1DMDAwLTAw
MDAwMDAwMDA0NgAAVgEAKE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Eb2NFdmVudHMo
TWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cwAAWAEAJDAwMDIwODEzLTAw
MDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwu
RG9jRXZlbnRzX0V2ZW50AAANAQAIX0RlZmF1bHQAACkBACQwMDAyMDg0Ni0wMDAwLTAwMDAtQzAw
MC0wMDAwMDAwMDAwNDYAACkBACQwMDAyMDhENy0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYA
ACkBACQwMDAyMDhEQS0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAACkBACQwMDAyNDQxMi0w
MDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAGABAC1NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3Au
RXhjZWwuV29ya2Jvb2tFdmVudHMtTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmti
b29rRXZlbnRzAABdAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2M01pY3Jv
c29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50c19FdmVudAAAKQEAJDAwMDIw
OERCLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDIwOEQ4LTAwMDAtMDAwMC1D
MDAwLTAwMDAwMDAwMDA0NgAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANBGAAAAAAAAAAAAAOpGAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADcRgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoE
AAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQBqbaQjAAABAGptpCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADgA
NgAxAGUANQAzAGUAOABkADEAMQAzADQANgBhAGYAOQA5ADUAMAAzADIAMwA5AGQANgAzADQAMQBl
ADQAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADEAMgA0AC4A
MgA4ADAAMQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADgANgAx
AGUANQAzAGUAOABkADEAMQAzADQANgBhAGYAOQA5ADUAMAAzADIAMwA5AGQANgAzADQAMQBlADQA
OQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEA
cgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBU
AF8AOAA2ADEAZQA1ADMAZQA4AGQAMQAxADMANAA2AGEAZgA5ADkANQAwADMAMgAzADkAZAA2ADMA
NAAxAGUANAA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABf
ADgANgAxAGUANQAzAGUAOABkADEAMQAzADQANgBhAGYAOQA5ADUAMAAzADIAMwA5AGQANgAzADQA
MQBlADQAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAx
ADIANAAuADIAOAAwADEAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4AOQAxADIANAAuADIAOAAwADEAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAD8NgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{12F604DB-211B-4814-AEF0-8199861A5959}"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{AD553A3C-47BE-4D1C-B7A6-A82D51455B90}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Process customer order data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Data Flow Task"
          TopLeft="154.999991531174,19.6444443078394" />
        <NodeLayout
          Size="211.2,41.6"
          Id="Package\Process customer order data"
          TopLeft="131.666659472717,229.955553956473" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="163.92856247191,125.377776905916" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="229.664277001542,61.2444443078394">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.1333325980766"
              Start="0,0"
              End="0,56.6333325980766">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.6333325980766" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="229.12856247191,166.977776905916">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.13809700080725,62.977777050557"
              Start="0,0"
              End="8.13809700080725,55.477777050557">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4888885252785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.4888885252785"
                    Point2="0,31.4888885252785"
                    Point3="4,31.4888885252785" />
                  <mssgle:LineSegment
                    End="4.13809700080725,31.4888885252785" />
                  <mssgle:CubicBezierSegment
                    Point1="4.13809700080725,31.4888885252785"
                    Point2="8.13809700080725,31.4888885252785"
                    Point3="8.13809700080725,35.4888885252785" />
                  <mssgle:LineSegment
                    End="8.13809700080725,55.477777050557" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Data Flow Task\Customer src"
          TopLeft="144.999998733401,63.9999999403954" />
        <NodeLayout
          Size="158.4,41.6"
          Id="Package\Data Flow Task\Cache Transform"
          TopLeft="334.522780401125,64.8814814157471" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="296.199998733401,85.2407406780713">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.3227816677244,0"
              Start="0,0"
              End="30.8227816677244,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.8227816677244,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Process customer order data">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="127.2,41.6"
          Id="Package\Process customer order data\Orders src"
          TopLeft="45.7167807189284,66.4053867436124" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Process customer order data\Excel Destination"
          TopLeft="761.287837192945,514.042420763927" />
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\Process customer order data\Matched ROws"
          TopLeft="337.832153072377,268.509089041912" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Process customer order data\unmatched rows"
          TopLeft="344.210354153548,173.472052665751" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\Process customer order data\Excel Destination 1"
          TopLeft="755.075716320239,374.981815670331" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Process customer order data\Union All"
          TopLeft="560.075726974568,232.109089295033" />
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\Process customer order data\lkp customer Id"
          TopLeft="41.1441313961174,173.205386000939" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Process customer order data\Conditional Split"
          TopLeft="551.287848666838,512.309087442647" />
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Flat File Source Output]"
          TopLeft="112.430456057522,108.005386743613">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.1999992573263"
              Start="0,0"
              End="0,57.6999992573263">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.6999992573263" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Derived Column Output1]"
          TopLeft="485.032153072377,289.309089041912">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.0435739021913,-30.799999746879"
              Start="0,0"
              End="67.5435739021913,-30.799999746879">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="39.3585093657105,0" />
                  <mssgle:CubicBezierSegment
                    Point1="39.3585093657105,0"
                    Point2="43.3585093657105,0"
                    Point3="43.3585093657105,-4" />
                  <mssgle:LineSegment
                    End="43.3585093657105,-26.799999746879" />
                  <mssgle:CubicBezierSegment
                    Point1="43.3585093657105,-26.799999746879"
                    Point2="43.3585093657105,-30.799999746879"
                    Point3="47.3585093657105,-30.799999746879" />
                  <mssgle:LineSegment
                    End="67.5435739021913,-30.799999746879" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Derived Column Output]"
          TopLeft="497.010354153548,194.272052665751">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.0653728210203,53.0370366292823"
              Start="0,0"
              End="55.5653728210203,53.0370366292823">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.4377709632562,0" />
                  <mssgle:CubicBezierSegment
                    Point1="32.4377709632562,0"
                    Point2="36.4377709632562,0"
                    Point3="36.4377709632562,4" />
                  <mssgle:LineSegment
                    End="36.4377709632562,49.0370366292823" />
                  <mssgle:CubicBezierSegment
                    Point1="36.4377709632562,49.0370366292823"
                    Point2="36.4377709632562,53.0370366292823"
                    Point3="40.4377709632562,53.0370366292823" />
                  <mssgle:LineSegment
                    End="55.5653728210203,53.0370366292823" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Case 1]"
          TopLeft="704.887848666838,533.975754103287">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56.399988526107,0"
              Start="0,0"
              End="48.899988526107,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="48.899988526107,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="9.2319083255535,5,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Lookup No Match Output]"
          TopLeft="189.944131396117,194.138719333345">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="154.266222757431,0"
              Start="0,0"
              End="146.766222757431,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="146.766222757431,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.5767246599655,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Lookup Match Output]"
          TopLeft="115.544131396117,214.805386000939">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="295.88802167626,53.7037030409736"
              Start="0,0"
              End="295.88802167626,46.2037030409736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.8518515204868" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.8518515204868"
                    Point2="0,26.8518515204868"
                    Point3="4,26.8518515204868" />
                  <mssgle:LineSegment
                    End="291.88802167626,26.8518515204868" />
                  <mssgle:CubicBezierSegment
                    Point1="291.88802167626,26.8518515204868"
                    Point2="295.88802167626,26.8518515204868"
                    Point3="295.88802167626,30.8518515204868" />
                  <mssgle:LineSegment
                    End="295.88802167626,46.2037030409736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="99.75262411938,31.8518515204868,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\Process customer order data\Multicast"
          TopLeft="574.999968583387,378.727270376863" />
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Union All Output 1]"
          TopLeft="620.075726974568,273.709089295033">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.5242416088188,105.01818108183"
              Start="0,0"
              End="14.5242416088188,97.5181810818301">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.509090540915" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.509090540915"
                    Point2="0,52.509090540915"
                    Point3="4,52.509090540915" />
                  <mssgle:LineSegment
                    End="10.5242416088188,52.509090540915" />
                  <mssgle:CubicBezierSegment
                    Point1="10.5242416088188,52.509090540915"
                    Point2="14.5242416088188,52.509090540915"
                    Point3="14.5242416088188,56.509090540915" />
                  <mssgle:LineSegment
                    End="14.5242416088188,97.5181810818301" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Multicast Output 1]"
          TopLeft="631.343908625112,420.327270376863">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,91.9818170657842"
              Start="0,0"
              End="0,84.4818170657842">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,84.4818170657842" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Process customer order data.Paths[Multicast Output 2]"
          TopLeft="694.199968583387,397.654543023597">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.8757477368521,0"
              Start="0,0"
              End="53.3757477368521,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.3757477368521,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Process customer order data\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process customer order data\Excel Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Process customer order data\lkp customer Id">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>